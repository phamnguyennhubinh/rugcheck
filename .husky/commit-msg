#!/bin/sh
# This hook is used to validate the commit message format

commit_msg_file=$1
commit_msg=$(cat "$commit_msg_file")

# Check if commit message starts with (feat/chores/update/bug/build):
if ! echo "$commit_msg" | grep -qE "^(feat|chores|update|bug|build|fix):.+"; then
  echo ""
  echo "╔═══════════════════════════════════════════════════════════════╗"
  echo "║                 🚫 COMMIT MESSAGE ERROR 🚫                    ║"
  echo "╚═══════════════════════════════════════════════════════════════╝"
  echo ""
  echo "  Your commit message must follow the required format:"
  echo ""
  echo "    👉 (feat|chores|update|bug|build): Your message"
  echo ""
  echo "  Examples:"
  echo "    ✅ feat: add user authentication"
  echo "    ✅ bug: fix validation error in login form"
  echo "    ✅ update: improve loading performance"
  echo "    ✅ chores: update dependencies"
  echo "    ✅ build: configure CI pipeline"
  echo ""
  echo "  Your commit message was:"
  echo "    ❌ $commit_msg"
  echo ""
  echo "╔═══════════════════════════════════════════════════════════════╗"
  echo "║              👆 Please fix and try again 👆                  ║"
  echo "╚═══════════════════════════════════════════════════════════════╝"
  echo ""
  exit 1
fi
